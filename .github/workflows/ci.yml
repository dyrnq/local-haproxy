name: ci

on:
  push:
    branches:
      - '!main'
    tags:
      - '*'
  # workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false
        # matrix:
        #   images:
        #   - "haproxytech/haproxy-debian:3.0.2"
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Test version
        run: |
          echo ${{ steps.get_version.outputs.VERSION }}
          echo ${{ github.ref }}
      -
        name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      -
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build dockerfile (with push)
        run: |
          latest=$(cat latest);
          echo $latest;
          latest_tag="";

          latest_tag="${latest_tag} --tag dyrnq/local-haproxy:${{ steps.get_version.outputs.VERSION }}"
          if [ "$latest" = "${{ steps.get_version.outputs.VERSION }}"  ]; then
              latest_tag="${latest_tag} --tag dyrnq/local-haproxy:latest"
              latest_tag="${latest_tag} --tag dyrnq/local-haproxy:latest-debian"
          fi

          echo $latest_tag;


          
          docker buildx build \
          --platform linux/amd64,linux/arm64,linux/arm/v7 \
          --output "type=image,push=true" \
          --file ./Dockerfile . \
          --build-arg BASE_IMAGE=haproxytech/haproxy-debian:${{ steps.get_version.outputs.VERSION }} $latest_tag
